// Layers pattern
app
[Middleware]
os/protocols - C interface at 
hw

// MW
(!)host infr. mw - wrap os apis
(!)distrib. mw - corba, .. - relay small overhead
common mw services - j2ee
domain spec mw servces - aircraft control

FIXME: jvm - middleware?

//
cons: 
- overhead
- how much layers

# Next()

#
Task based arch vs 
- cost

Message-based arch
- less intuitive design

# Socket API - to low level
Note: sock and select() - have much troubles
bound to end and/or remote host

exist POSIX functions - r/w rv/wv
3d model study

Attention: ! sync ev demux ! wait events on handles

# Th and Proc
Proc - isolation

# Locks - wait - wait is BAD! spinlock/sleep_lock/adaptive
- non-recurs/recrs
- Attention: r/w lock - multi readers in one time
// bigger overhead
- sem - inc/dec atomic - ! unlike 
http://www.transl-gunsmoker.ru/2010/05/blog-post_21.html
- cond var

# 
loop:
	Pattern knowl.
	trade-off analysis
	design and impl. decisions
	impl and intergate pattern and code
end loop

patt. not forever
	design may be just design
	alg. may be just alg.

GoF
- creation
- structural
- behavioral
//
+ destroy - missing in gof

POSA1 - concurent, network
- arch patterns
- design patt.

Brocker, Command Proc., Proxy













